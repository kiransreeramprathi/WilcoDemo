#Author : Kiran sreeram Prathi
#Created Date : 05/08/2023
#Updated Date : 05/08/2023
name: Validate PullRequest In Target Org

on:
  pull_request:
    branches:
      - main
    paths:
      - force-app/**

jobs:
  validate-in-target-org:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2 # Fetch previous commit for delta changes

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.17.0

      # Install Salesforce CLI
      - name: Install Salesforce CLI
        run: npm install @salesforce/cli --global

      # Install oclif dependencies
      - name: Install oclif dependencies
        run: npm install --global oclif@latest

      # Install sfdx-git-delta
      - name: Install sfdx-git-delta
        run: echo y | sfdx plugins:install sfdx-git-delta@latest

      # Authenticate with Salesforce Org
      - name: Authenticate Salesforce Org
        run: |
          echo "${{ secrets.SFDX_AUTH_URL_PRODUCTION }}" > sfdx-auth-url.txt
          sf org login sfdx-url -f sfdx-auth-url.txt -s -a DI
      # Determine Commit Range
      - name: Determine Commit Range
        id: git-info
        run: |
          echo "Using GitHub Event: ${{ github.event_name }}"
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "base=$(jq -r .pull_request.base.sha < $GITHUB_EVENT_PATH)" >> $GITHUB_ENV
            echo "head=$(jq -r .pull_request.head.sha < $GITHUB_EVENT_PATH)" >> $GITHUB_ENV
          else
            echo "base=$(git rev-parse HEAD^)" >> $GITHUB_ENV
            echo "head=$(git rev-parse HEAD)" >> $GITHUB_ENV
          fi
      # Generate Delta Changes
      - name: Generate Delta Changes
        run: |
          echo "Using base commit: ${{ env.base }}"
          echo "Using head commit: ${{ env.head }}"
          sfdx sgd:source:delta --to ${{ env.head }} --from ${{ env.base }} --output . > delta_output.txt
      # Parse Delta Changes
      - name: Parse Delta Changes
        run: |
          mkdir -p parsed_changes
          if [ -f package/package.xml ]; then
            echo "Delta changes detected."
            mv package/package.xml parsed_changes/
          else
            echo "No delta changes detected for deployment."
            exit 1
            fi
      # Display package.xml
      - name: Display package.xml
        if: success()
        run: cat parsed_changes/package.xml

      # Validate Deployment
      - name: Validate Deployment
        if: success()
        run: |
          sf project deploy validate -x parsed_changes/package.xml \
            -o DI \
            -l RunLocalTests \
            --verbose
